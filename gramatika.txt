Pravidlá bezkontextovej gramatiky používanej parserom.
€ = epsilon
id = identifikátor
exp = výraz

// statement - príkaz
1. <STAT> -> €

// definícia premennej
2. <STAT> -> let id <DEF_VAR> <STAT>        // let a : Int = 4
3. <STAT> -> var id <DEF_VAR> <STAT>
4. <DEF_VAR> -> : <TYPE> <INIT_VAL>
5. <DEF_VAR> -> = <ASSIGN> 
6. <INIT_VAL> -> = <ASSIGN>                 // inicializačná hodnota ... priradenie
7. <INIT_VAL> -> €                          // bez inicializácie

// priradenie ... "= a + 25"
8. <ASSIGN> -> exp
9. <ASSIGN> -> id ( <PAR_LIST> )

// priradenie
10. <STAT> -> id = <ASSIGN> <STAT>

// blok kódu 
11. <STAT> -> { <STAT> } <STAT>

// volanie funkcie
12. <STAT> -> id ( <PAR_LIST> ) <STAT>
13. <PAR_LIST> -> id : term <PAR_IN_NEXT>       // list vstupných parametrov funkcie
14. <PAR_LIST> -> term <PAR_IN_NEXT>
15. <PAR_LIST> -> €
16. <PAR_IN_NEXT> -> , <PAR_IN> <PAR_IN_NEXT>
17. <PAR_IN_NEXT> -> €
18. <PAR_IN> -> id : term
19. <PAR_IN> -> term

// definícia funkcie
20. <STAT> -> func id ( <FN_SIG> ) <FN_RET_TYPE> { <STAT> } <STAT>
21. <FN_SIG> -> id id : <TYPE> <FN_PAR_NEXT>    // signatúra/predpis funkcie
22. <FN_SIG> -> _ id : <TYPE> <FN_PAR_NEXT>
23. <FN_SIG> -> €
24. <FN_PAR_NEXT> -> , <FN_PAR> <FN_PAR_NEXT>
25. <FN_PAR_NEXT> -> €
26. <FN_PAR> -> id id : <TYPE>
27. <FN_PAR> -> _ id : <TYPE>
28. <FN_PAR> -> id _ : <TYPE>
29. <FN_PAR> -> _ _ : <TYPE>
30. <FN_RET_TYPE> -> "->" <TYPE>                // návratový typ funkcie
31. <FN_RET_TYPE> -> €                          // void funkcia

// vrátenie hodnoty z funkcie
32. <STAT> -> return <RET_VAL> <STAT>
33. <RET_VAL> -> exp
34. <RET_VAL> -> €

// podmienka if
35. <STAT> -> if <COND> { <STAT> } else { <STAT> } <STAT>
36. <COND> -> exp
37. <COND> → let id

// cyklus
38. <STAT> -> while exp { <STAT> } <STAT>

// dátový typ
39. <TYPE> -> Integer <QUESTMARK>
40. <TYPE> -> Double <QUESTMARK>
41. <TYPE> -> String <QUESTMARK>
42. <QUESTMARK> -> ?
43. <QUESTMARK> -> €
